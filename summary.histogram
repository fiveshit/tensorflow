with tf.name_scope('weights')
  Weights = tf.Variable(tf.random.normal([input,output]),name = 'w')
  tf.summary.histogram(layer_name + '/weights',Weights)   
  ....
  
with tf.name_scope('loss')
  loss = tf.reduce_mean(tf.sum(y - predictoin), reduction_indices=[1])) 
  tf.summary.scalar('loss',loss)3
 ...
for i in range(1000):
  sess.run(train_step,feed_dict = {xs:x_data,ys:y_data})
  if i % 50 == 0:
    result = sess.run(merged,feed_dict = {xs:x_data,ys:y_data})
    wirter.add_summary(result,i)
