import tensorflow as tf
import numpy as np
-------------------------
fun = np.arange(24).reshape(4,6)
'''
[[ 0  1  2  3  4  5]
 [ 6  7  8  9 10 11]
 [12 13 14 15 16 17]
 [18 19 20 21 22 23]]
 '''
 ##### split(value,num_or_size_splits,axis=0,num=None,name='split') ###
 
x1,x2 = tf.split(fun,2,1)
x2 = 
 '''
 [[ 3  4  5]
 [ 9 10 11]
 [15 16 17]
 [21 22 23]]
 '''
 x1 , x2, x3, x4= tf.split(t,4,0)
 x2 = 
 '''
 [[ 6  7  8  9 10 11]]
 ''' 
 
 #####  reduce_mean(input_tensor,axis=None,keep_dims=False,name=None,reduction_indices=None) ####
 x  = tf.reduce_mean(fun)
 '''
 11
 '''
 x = tf.reduce_mean(fun,0)
 '''
 [ 9 10 11 12 13 14]
 '''
 
 x = tf.reduce_mean(fun,1)
 '''
 [ 2  8 14 20]
 '''
 #### reduce_sum(input_tensor,axis=None,keep_dims=False,name=None,reduction_indices=None) #####
 x = tf.reduce_sum(fun)
 '''
 276
 '''
 
 x = tf.reduce_sum(fun,0)
 '''
 [36 40 44 48 52 56]
 '''
 
 x = tf.reduce_sum(fun,1)
 '''
 [ 15  51  87 123]
 '''
 x = tf.reduce_sum(fun,1,keep_dims = True)
 '''
 [[ 15]
 [ 51]
 [ 87]
 [123]]
 '''
 x = tf.reduce_sum(fun,[0,1])
 '''
 276
 '''
 #### reshape(tensor,shape,name=None) ####
 
 x = tf.reshape(fun,[-1])
 '''
 [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23]
 '''
 
 x = tf.reshape(fun,[2,-1])
 '''
 [[ 0  1  2  3  4  5  6  7  8  9 10 11]
 [12 13 14 15 16 17 18 19 20 21 22 23]]
 '''
 
 x = tf.reshape(fun,[-1,12])   # 24/12 = 2
 '''
  [[ 0  1  2  3  4  5  6  7  8  9 10 11]
 [12 13 14 15 16 17 18 19 20 21 22 23]]
 '''
 #### matmul(a,b,transpose_a=False,transpose_b=False,
    adjoint_a=False,adjoint_b=False,a_is_sparse=False,b_is_sparse=False,
    name=None)  ####
    
    
### argmin(input,axis=None,name=None,dimension=None) ###

x = tf.argmin(fun,0)
'''
[0 0 0 0 0 0]
'''
x = tf.argmin(fun,1)
'''
[0 0 0 0]
'''

### argmax(input,axis=None,name=None,dimension=None) ###

x = tf.argmax(fun,0)
'''
[3 3 3 3 3 3 ]
'''
x = tf.argmax(fun,1)
'''
[5 5 5 5]
'''

### one_hot(indices,depth,on_value=None,off_value=None,axis=None,dtype=None,name=None) ###

x = tf.one_hot(indices = [0,1,-1,2],depth = 3,on_value=3,off_value=-1)
'''
[[ 3 -1 -1]  #  0
 [-1  3 -1]  #  1
 [-1 -1 -1]  # -1
 [-1 -1  3]] #  2
 '''
 x = tf.one_hot(indices = [0,1,-1,2],depth = 5,on_value=3,off_value=-1)
 '''
 [[ 3 -1 -1 -1 -1]
 [-1  3 -1 -1 -1]
 [-1 -1 -1 -1 -1]
 [-1 -1  3 -1 -1]]
 '''
 
 x = tf.one_hot(indices = [[0,1],[2,-1]],depth = 3,on_value=3,off_value=-1)
 '''
 [[[ 3 -1 -1]
  [-1  3 -1]]

 [[-1 -1  3]
  [-1 -1 -1]]]
  '''
 ###  cast(x,dtype,name=None) ###
 
 fun = np.array([[1.8,3.3]])
 x = tf.cast(fun,tf.int32)
 '''
 [[1 3]]
 '''
 
 ### concat(values,axis,name='concat') ###
 
 t1 = [[1, 2, 3], [4, 5, 6]]
t2 = [[7, 8, 9], [10, 11, 12]]
tf.concat([t1, t2], 0)
'''
[[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]]
'''
tf.concat([t1, t2], 1)
'''
[[1, 2, 3, 7, 8, 9], [4, 5, 6, 10, 11, 12]]
'''


### shape(input,name=None,out_type=tf.int32) ##

x = tf.shape(concat([t1,t2],0))
'''
[4 3]
'''
x = tf.shape(tf.concat([t1,t2],1))
'''
[2 6]
'''


 
 
 
